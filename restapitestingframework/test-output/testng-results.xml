<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="14" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-01T19:08:15 PST" name="RestAPI test" finished-at="2021-03-01T19:08:24 PST" duration-ms="8946">
    <groups>
    </groups>
    <test started-at="2021-03-01T19:08:15 PST" name="testing NASA Search API" finished-at="2021-03-01T19:08:24 PST" duration-ms="8946">
      <class name="restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest@b62fe6d]" started-at="2021-03-01T19:08:21 PST" name="setup" finished-at="2021-03-01T19:08:21 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithEmptyString()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest@b62fe6d]" started-at="2021-03-01T19:08:21 PST" name="searchWithEmptyString" description="search text is empty string" finished-at="2021-03-01T19:08:21 PST" duration-ms="211" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [200]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest.searchWithEmptyString(NasaSearchByMediaTypeTest.java:160)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithEmptyString -->
        <test-method signature="searchWithInvalidyString()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest@b62fe6d]" started-at="2021-03-01T19:08:21 PST" name="searchWithInvalidyString" description="search by invalid text" finished-at="2021-03-01T19:08:21 PST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInvalidyString -->
        <test-method signature="searchWithNull()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest@b62fe6d]" started-at="2021-03-01T19:08:21 PST" name="searchWithNull" description="search text is null" finished-at="2021-03-01T19:08:21 PST" duration-ms="196" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [200]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest.searchWithNull(NasaSearchByMediaTypeTest.java:146)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithNull -->
        <test-method signature="searchWithValidTextInLowercase()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest@b62fe6d]" started-at="2021-03-01T19:08:21 PST" name="searchWithValidTextInLowercase" description="happy path - search by valid media type in lowercase " finished-at="2021-03-01T19:08:22 PST" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidTextInLowercase -->
        <test-method signature="searchWithValidTextInMixedcase()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest@b62fe6d]" started-at="2021-03-01T19:08:22 PST" name="searchWithValidTextInMixedcase" description="happy path - search by valid media type in mixedcase" finished-at="2021-03-01T19:08:22 PST" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidTextInMixedcase -->
        <test-method signature="searchWithValidTextInUppercase()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest@b62fe6d]" started-at="2021-03-01T19:08:22 PST" name="searchWithValidTextInUppercase" description="happy path - search by valid media type in uppercase" finished-at="2021-03-01T19:08:23 PST" duration-ms="493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidTextInUppercase -->
      </class> <!-- restapitest.restapitestingframework.tests.NasaSearchByMediaTypeTest -->
      <class name="restapitest.restapitestingframework.tests.NasaSearchAPIByDateTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByDateTest@13acb0d1]" started-at="2021-03-01T19:08:23 PST" name="setup" finished-at="2021-03-01T19:08:23 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithInvalidEndYear()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByDateTest@13acb0d1]" started-at="2021-03-01T19:08:23 PST" name="searchWithInvalidEndYear" description="test for optional parameters combinations and year_end is invalid" finished-at="2021-03-01T19:08:23 PST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInvalidEndYear -->
        <test-method signature="searchWithInvalidStartYear()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByDateTest@13acb0d1]" started-at="2021-03-01T19:08:23 PST" name="searchWithInvalidStartYear" description="test for optional parameters combinations and year_start is invalid" finished-at="2021-03-01T19:08:23 PST" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInvalidStartYear -->
        <test-method signature="searchWithOptionalParameters()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByDateTest@13acb0d1]" started-at="2021-03-01T19:08:23 PST" name="searchWithOptionalParameters" description="happy path - test for optional parameters combinations" finished-at="2021-03-01T19:08:23 PST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithOptionalParameters -->
        <test-method signature="searchWithStartYearInFuture()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByDateTest@13acb0d1]" started-at="2021-03-01T19:08:23 PST" name="searchWithStartYearInFuture" description="test for optional parameters combinations and year_end is invalid" finished-at="2021-03-01T19:08:24 PST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithStartYearInFuture -->
      </class> <!-- restapitest.restapitestingframework.tests.NasaSearchAPIByDateTest -->
      <class name="restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest@3c153a1]" started-at="2021-03-01T19:08:15 PST" name="setup" finished-at="2021-03-01T19:08:15 PST" duration-ms="533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithEmptyString()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest@3c153a1]" started-at="2021-03-01T19:08:15 PST" name="searchWithEmptyString" description="search text is empty string" finished-at="2021-03-01T19:08:17 PST" duration-ms="1840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithEmptyString -->
        <test-method signature="searchWithInvalidyString()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest@3c153a1]" started-at="2021-03-01T19:08:17 PST" name="searchWithInvalidyString" description="search by invalid text" finished-at="2021-03-01T19:08:17 PST" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInvalidyString -->
        <test-method signature="searchWithNull()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest@3c153a1]" started-at="2021-03-01T19:08:17 PST" name="searchWithNull" description="search text is null" finished-at="2021-03-01T19:08:18 PST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithNull -->
        <test-method signature="searchWithValidTextInLowercase()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest@3c153a1]" started-at="2021-03-01T19:08:18 PST" name="searchWithValidTextInLowercase" description="happy path - search by valid text in lowercase " finished-at="2021-03-01T19:08:19 PST" duration-ms="1530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidTextInLowercase -->
        <test-method signature="searchWithValidTextInMixedcase()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest@3c153a1]" started-at="2021-03-01T19:08:19 PST" name="searchWithValidTextInMixedcase" description="happy path - search by valid text in mixedcase" finished-at="2021-03-01T19:08:20 PST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidTextInMixedcase -->
        <test-method signature="searchWithValidTextInUppercase()[pri:0, instance:restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest@3c153a1]" started-at="2021-03-01T19:08:20 PST" name="searchWithValidTextInUppercase" description="happy path - search by valid text in uppercase" finished-at="2021-03-01T19:08:21 PST" duration-ms="754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidTextInUppercase -->
      </class> <!-- restapitest.restapitestingframework.tests.NasaSearchAPIByTextTest -->
    </test> <!-- testing NASA Search API -->
  </suite> <!-- RestAPI test -->
</testng-results>
